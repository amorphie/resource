// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace amorphie.resource.data.Migrations
{
    [DbContext(typeof(ResourceDBContext))]
    [Migration("20230316120045_v18")]
    partial class v18
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec88a6d6-b243-40ab-a598-e350143ebfe3"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1185),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1196),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Status = "A",
                            Tags = new[] { "tag1", "tag2" },
                            Type = (byte)0,
                            Url = "urlsample"
                        });
                });

            modelBuilder.Entity("ResourceRateLimit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Condition")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Cron")
                        .HasColumnType("text");

                    b.Property<int?>("Limit")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Scope")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResourceRateLimits");
                });

            modelBuilder.Entity("ResourceRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResourceRoles");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c60439c-5cd0-40db-aa43-07da7dbf97d9"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1230),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1231),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Status = "A",
                            Tags = new[] { "tag1", "tag2" }
                        });
                });

            modelBuilder.Entity("RoleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("RoleGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c72b6a7-5475-41d8-8e9b-d73c8bd1dcdc"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1242),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1243),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Status = "A",
                            Tags = new[] { "tag1", "tag2" }
                        });
                });

            modelBuilder.Entity("RoleGroupRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoleGroupRoles");
                });

            modelBuilder.Entity("amorphie.core.Base.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ResourceId_Description")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ResourceId_DisplayName")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleGroupId_Title")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId_Title")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId_Description");

                    b.HasIndex("ResourceId_DisplayName");

                    b.HasIndex("RoleGroupId_Title");

                    b.HasIndex("RoleId_Title");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d064d61-b8ba-42f3-8b5a-fbde508a9b59"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1270),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Label = "Açıklama",
                            Language = "tr",
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1271),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ResourceIdDescription = new Guid("ec88a6d6-b243-40ab-a598-e350143ebfe3")
                        },
                        new
                        {
                            Id = new Guid("58cc4d41-0a33-498c-8a50-4d4c824ed03b"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1273),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Label = "Description",
                            Language = "en",
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1274),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ResourceIdDescription = new Guid("ec88a6d6-b243-40ab-a598-e350143ebfe3")
                        },
                        new
                        {
                            Id = new Guid("fef2ff34-6832-42ec-b1e6-f6405b04b1cd"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1275),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Label = "Başlık",
                            Language = "tr",
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1275),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ResourceIdDisplayName = new Guid("ec88a6d6-b243-40ab-a598-e350143ebfe3")
                        },
                        new
                        {
                            Id = new Guid("9ad2f5e1-0629-414a-8e47-3c4e9d5701d1"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1277),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Label = "Rol Başlık",
                            Language = "tr",
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1278),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            RoleIdTitle = new Guid("9c60439c-5cd0-40db-aa43-07da7dbf97d9")
                        },
                        new
                        {
                            Id = new Guid("4758b395-453f-455d-8d2e-d94cf2a6c85f"),
                            CreatedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1280),
                            CreatedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            CreatedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            Label = "Rol Grup Başlık",
                            Language = "tr",
                            ModifiedAt = new DateTime(2023, 3, 16, 15, 0, 45, 413, DateTimeKind.Local).AddTicks(1280),
                            ModifiedBy = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            ModifiedByBehalfOf = new Guid("bcdad1dd-edd0-4604-8f82-6d9b5a95f57e"),
                            RoleGroupIdTitle = new Guid("9c72b6a7-5475-41d8-8e9b-d73c8bd1dcdc")
                        });
                });

            modelBuilder.Entity("amorphie.core.Base.Translation", b =>
                {
                    b.HasOne("Resource", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("ResourceId_Description");

                    b.HasOne("Resource", null)
                        .WithMany("DisplayNames")
                        .HasForeignKey("ResourceId_DisplayName");

                    b.HasOne("RoleGroup", null)
                        .WithMany("Titles")
                        .HasForeignKey("RoleGroupId_Title");

                    b.HasOne("Role", null)
                        .WithMany("Titles")
                        .HasForeignKey("RoleId_Title");
                });

            modelBuilder.Entity("Resource", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("DisplayNames");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("Titles");
                });

            modelBuilder.Entity("RoleGroup", b =>
                {
                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
